<?xml version="1.0"?>
<project name="IPNetwork" default="main" basedir=".">

	<property name="ipnetwork.sln" value="..\src\ipnetwork.sln" />
	<property name="doc.base" value="${project::get-base-directory()}\..\doc" />
	<property name="doc.doxygen" value="${doc.base}\Doxyfile" />
	<property name="release.version" value="2.2.0" />
	<property name="release.doc" value="..\doc\html" />
	<property name="release.base" value="..\release" />
	<property name="src.base" value="..\" />
	<property name="release.zip" value="${release.base}\IPNetwork-${release.version}.zip" />
	<property name="release.temp" value="${release.base}\temp" />

	<property name="src.dir" value="..\src" />
	<property name="consoleappnetframework.dir" value="..\src\System.Net.IPNetwork.ConsoleApplication.NetFramework\bin\Release" />
	<property name="consoleappnetcore.dir" value="..\src\System.Net.IPNetwork.ConsoleApplication.NetCore\bin\Release\netcoreapp2.0" />
	<property name="lib.dir.netstandard1.3" value="..\src\System.Net.IPNetwork\bin\release\netstandard1.3" />
	<property name="lib.dir.net46" value="..\src\System.Net.IPNetwork\bin\release\net46" />
	<property name="lib.dir.net45" value="..\src\System.Net.IPNetwork\bin\release\net45" />
	<property name="lib.dir.net40" value="..\src\System.Net.IPNetwork\bin\release\net40" />

	<property name="nupkg.dir" value="..\src\System.Net.IPNetwork\bin\release" />
	<property name="nuget.dir" value="..\release" />

	  
	<target name="prerelease">
	
		<echo>
		
	Before you release:
	
		- Change version numbers in :
		
			..\nant\release.build (this file)
			
			..\src\System.Net.IPNetwork\System.Net.IPNetwork.csproj
			
			..\src\System.Net.IPNetwork\Properties\AssemblyInfo.cs
			..\src\System.Net.IPNetwork.ConsoleApplication.NetFramework\Properties\AssemblyInfo.cs
			..\src\System.Net.IPNetwork.ConsoleApplication.Source\Properties\AssemblyInfo.cs
			..\src\System.Net.IPNetwork.TestProject.Source\Properties\AssemblyInfo.cs
			
			..\doc\Doxyfile
            
			..\appveyor.yml
			

	After you release:

		- Manual push to nuget :
			
			nuget push .\IPNetwork.${release.version}.nupkg
			
				
		</echo>
		
	</target>

	<target name="main" description="Do the full integration process.">
		

		<call target="prerelease" />
		<call target="postrelease" />

		<sleep seconds="1" />

		<call target="build" />
		<call target="doxygen" />
		<call target="copy" />
		<call target="zip" />
		<call target="nuget" />
		<call target="clean" />

		<call target="postrelease" />
		
		
	</target>
	
	<target name="postrelease">
	
		<echo>
		
	After you release:

		- Manual push to nuget :
			
			nuget push ..\release\IPNetwork2.${release.version}.nupkg
			
				
		</echo>

	
	</target>

	<target name="copy">
		<echo>
		
		   Copy all files for release
		   
		</echo>
		
		<delete dir="${release.temp}" />
		<mkdir dir="${release.temp}" />
		<mkdir dir="${release.temp}/bin" />
		<mkdir dir="${release.temp}/bin-netcoreapp2.0" />
		<mkdir dir="${release.temp}/lib" />
		<mkdir dir="${release.temp}/doc" />

		<copy todir="${release.temp}/bin">
		   <fileset basedir="${consoleappnetframework.dir}" >
		      <include name="**/*.*" />
		   </fileset>
		</copy>

		<copy todir="${release.temp}/bin-netcoreapp2.0">
		   <fileset basedir="${consoleappnetcore.dir}" >
		      <include name="**/*.*" />
		   </fileset>
		</copy>

		<delete >
		   <fileset basedir="${release.temp}/bin">
		      <include name="**/*.pdb" />
		      <include name="**/*Test*.*" />
		   </fileset>
		</delete>
		
		<copy todir="${release.temp}/lib/netstandard1.3">
		   <fileset basedir="${lib.dir.netstandard1.3}" >
		      <include name="System.Net.IPNetwork.dll" />
		   </fileset>
		</copy>
		
		<copy todir="${release.temp}/lib/net46">
		   <fileset basedir="${lib.dir.net46}" >
		      <include name="System.Net.IPNetwork.dll" />
		   </fileset>
		</copy>
		
		<copy todir="${release.temp}/lib/net45">
		   <fileset basedir="${lib.dir.net45}" >
		      <include name="System.Net.IPNetwork.dll" />
		   </fileset>
		</copy>
		
		<copy todir="${release.temp}/lib/net40">
		   <fileset basedir="${lib.dir.net40}" >
		      <include name="System.Net.IPNetwork.dll" />
		   </fileset>
		</copy>

		<copy todir="${release.temp}" file="${src.base}/README.md" />
		<copy todir="${release.temp}" file="${src.base}/LICENSE" />

		<copy todir="${release.temp}/doc/html">
		   <fileset basedir="${doc.base}/html">
            <include name="**/*" />
         </fileset>
		</copy>
		
		
	</target>
		
		
	<target name="nuget">
		<echo>
		
		   Copy nugetpackage for release 
		   nuget.dir : ${nuget.dir}
		   
		</echo>
		
		<mkdir dir="${nuget.dir}" />

		<copy todir="${nuget.dir}">
		   <fileset basedir="${nupkg.dir}" >
		      <include name="*.nupkg" />
		   </fileset>
		</copy>

		
	</target>
		
	
	<target name="zip">
		<echo>
		
		   ZIP all files for release
		   
		</echo>
		
		<zip zipfile="${release.zip}">
		   <fileset basedir="${release.temp}">
		      <include name="**/*.*" />
		   </fileset>
		</zip>
		   		
	</target>
	
	
	<target name="clean">
		<echo>
		
		   Clean temp dir
		   
		</echo>
			
		<delete dir="${release.temp}" />

	</target>	

   <target name="doxygen" >
   
      <echo>
      
            generates source code documentation using doxygen tool
            
      </echo>

      <mkdir dir="${release.doc}" unless="${directory::exists(release.doc)}" />
      <delete >
         <fileset basedir="${release.doc}">
		      <include name="**/*.*" />
		      <exclude name="**/.svn" />
         </fileset>
      </delete>

      <exec program="C:\Program Files\doxygen\bin\doxygen.exe" workingdir="${doc.base}">
         <arg value="${doc.doxygen}" />
      </exec>
  </target>
  
  
  
 	<target name="build" description="Build of the solution using the release configuration.">

		<delete dir="${src.dir}\Gnu.Getopt\bin" />
		<delete dir="${src.dir}\Gnu.Getopt\obj" />
		<delete dir="${src.dir}\System.Net.IPNetwork\bin" />
		<delete dir="${src.dir}\System.Net.IPNetwork\obj" />
		<delete dir="${src.dir}\System.Net.IPNetwork.ConsoleApplication.NetFramework\bin" />
		<delete dir="${src.dir}\System.Net.IPNetwork.ConsoleApplication.NetFramework\obj" />
		<delete dir="${src.dir}\System.Net.IPNetwork.ConsoleApplication.NetCore\bin" />
		<delete dir="${src.dir}\System.Net.IPNetwork.ConsoleApplication.NetCore\obj" />
		<delete dir="${src.dir}\System.Net.IPNetwork.TestProject.NetCore\bin" />
		<delete dir="${src.dir}\System.Net.IPNetwork.TestProject.NetCore\obj" />
		  
		<property name="dotnet.path" value="C:\Program Files\dotnet"/>
		<exec program="dotnet.exe" basedir="${dotnet.path}" workingdir="${src.dir}">
			<arg value="clean" />
		</exec>
		
		<exec program="dotnet.exe" basedir="${dotnet.path}" workingdir="${src.dir}">
			<arg value="restore" />
		</exec>
		
		<exec program="dotnet.exe" basedir="${dotnet.path}" workingdir="${src.dir}">
			<arg value="pack" />
			<arg value="-c" />
			<arg value="release" />
			<arg value=".\System.Net.IPNetwork\" />
		</exec>
		
		<exec program="dotnet.exe" basedir="${dotnet.path}" workingdir="${src.dir}">
			<arg value="test" />
			<arg value="./System.Net.IPNetwork.TestProject.NetCore/System.Net.IPNetwork.TestProject.NetCore.csproj" />
		</exec>
		
		<exec program="dotnet.exe" basedir="${dotnet.path}" workingdir="${src.dir}">
			<arg value="build" />
			<arg value="-c" />
			<arg value="release" />
			<arg value="./System.Net.IPNetwork.ConsoleApplication.NetFramework" />
		</exec>
		
		<exec program="dotnet.exe" basedir="${dotnet.path}" workingdir="${src.dir}">
			<arg value="build" />
			<arg value="-c" />
			<arg value="release" />
			<arg value="./System.Net.IPNetwork.ConsoleApplication.NetCore" />
		</exec>
		
	</target>

 

</project>

